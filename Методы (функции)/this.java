// Нельзя в одном методе создать несколько локальных переменных с одинаковыми именами. 
// В разных методах — можно.
// НО разрешается, чтобы у ПЕРЕМЕННЫХ КЛАССА и ЛОКАЛЬНЫХ ПЕРЕМЕННЫХ метода были одинаковые имена.

Доступность переменных
public class Solution
{
   public int count = 0; // Доступность переменных: count
   public int sum = 0; // Доступность переменных: count, sum
						// Доступность переменных: count, sum
   public void add(int data) // Доступность переменных: count, sum
   { // Доступность переменных: count, sum
     sum = sum + data; // Доступность переменных: count, sum, data
     int sum = data * 2; // Доступность переменных: count, sum, data
     count++; // Доступность переменных: count, sum, data
   } // Доступность переменных: count, sum
}


// В методе add мы объявили локальную переменную sum, и она до конца действия метода ПЕРЕКРЫВАЕТ (или еще говорят ЗАТЕНЯЕТ) собой переменную класса sum.
// Если переменную класса затеняет локальная переменная, в методе все-таки существует способ обратиться к переменной класса. Для этого нужно перед ее именем написать ключевое слово this:
this.имя
// Вот пример, где конфликт имен успешно решается:

public class Solution
{
   public int count = 0;
   public int sum = 0;

   public void add(int data)
   {
     int sum = data * 2;
     this.sum = this.sum + data;
     count++;
   }
}

// Везде переменные count и sum доступны как с ключевым словом this, так и без него. 
// В тех строках, где локальная переменная sum затеняет переменную класса sum, доступ к переменной класса sum возможен только при использовании this.


// Если затеняется не просто переменная класса, а статическая переменная класса, обращаться к ней нужно не через this, а через имя класса:
 
ClassName.имя

public class Solution
{
   public static int count = 0;
   public static int sum = 0;

   public void add(int data)
   {
     int sum = data * 2;
     Solution.sum = Solution.sum + data;
     count++;
   }

// ???
// Везде статические переменные count и sum доступны как с префиксом в виде имени класса Solution, так и без него. 
// В тех строках, где локальная переменная sum затеняет переменную класса sum, доступ к переменной класса sum возможен только при использовании префикса Solution.